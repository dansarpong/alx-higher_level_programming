The ``3-say_my_name`` module
============================

Using ``3-say_my_name``
-----------------------

Importing the function from the module:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Checking the documentation:
    >>> m = __import__('3-say_my_name').__doc__
    >>> len(m) > 1
    True
    >>> f = __import__('3-say_my_name').say_my_name
    >>> len(f.__doc__) > 1
    True

Checking for correct output:
    >>> say_my_name("John", "Smith")
    My name is John Smith
    >>> say_my_name("Walter", "White")
    My name is Walter White

Checking for one argument:
    >>> say_my_name("Bob") # doctest: +NORMALIZE_WHITESPACE
    My name is Bob

Checking for no arguments:
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Checking for more than two arguments:
    >>> say_my_name("Bob", "Smith", "Jr.")
    Traceback (most recent call last):
    TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

Checking for correct type of arguments:
    >>> say_my_name("Bob", 12)
    Traceback (most recent call last):
    TypeError: last_name must be a string
    >>> say_my_name(12, "Bob")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Checking for None arguments:
    >>> say_my_name(None, None)
    Traceback (most recent call last):
    TypeError: first_name must be a string
    >>> say_my_name("Bob", None)
    Traceback (most recent call last):
    TypeError: last_name must be a string
    >>> say_my_name(None, "Bob")
    Traceback (most recent call last):
    TypeError: first_name must be a string
